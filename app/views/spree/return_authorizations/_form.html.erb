<% display_only ||= false %>
<div data-hook="return_authorization_form_fields">
  <div style="overflow-x: auto">
    <table class="table table-condensed table-bordered index return-items-table">
      <thead>
        <tr data-hook="rma_header">
          <th>
          </th>
          <th><%= Spree.t(:product) %></th>
          <th><%= Spree.t(:status) %></th>
          <th><%= Spree.t(:charged) %></th>
          <th><%= Spree.t(:purchased_quantity) %></th>
          <th><%= Spree.t(:return_quantity) %></th>
          <th><%= Spree.t(:pre_tax_refund_amount) %></th>
          <th><%= Spree.t(:exchange_for) %></th>
        </tr>
      </thead>
      <tbody>
        <%= f.fields_for :return_items, @form_return_items do |item_fields| %>
          <% return_item = item_fields.object %>
          <% inventory_unit = return_item.inventory_unit %>
          <% editable = !inventory_unit.return_authorizations.present? && inventory_unit.shipped? && return_item.returned? && @return_authorization.new_record? %>
          <tr>
            <td class="inventory-unit-checkbox">
              <% if editable %>
                <%= item_fields.hidden_field :inventory_unit_id %>
                <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true }, '0', '1' %>
              <% elsif @return_authorization.persisted? %>  <!-- show checkbox only for show -->
                <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true, disabled: 'disabled' }, '0', '1' %>
              <% end %>
            </td>
            <td>
              <div class="variant-name"><%= inventory_unit.variant.name %></div>
              <div class="variant-options"><%= inventory_unit.variant.options_text %></div>
            </td>
            <td><%= inventory_unit.state.humanize %></td>
            <td class="charged-amount" data-charged-amount="<%= return_item.pre_tax_amount %>">
              <%= return_item.display_pre_tax_amount %>
            </td>
            <td class="purchased-quantity">
              <%= inventory_unit.quantity %>
            </td>
            <td>
              <% if editable %>
                <%= item_fields.number_field :return_quantity, { class: 'refund-quantity-input form-control', min: 0, max: return_item.return_quantity } %>
              <% else %>
                <%= return_item.return_quantity %>
              <% end %>
            </td>
            <td>
              <% if editable %>
                <%= item_fields.text_field :pre_tax_amount, { class: 'refund-amount-input form-control', value: item_fields.object.pre_tax_amount.round } %>
              <% else %>
                <%= return_item.display_pre_tax_amount %>
              <% end %>
            </td>
            <td>
              <% if editable %>
                <%= item_fields.collection_select :exchange_variant_id, return_item.eligible_exchange_variants, :id, :exchange_name, { include_blank: true }, { class: "select2 return-item-exchange-selection form-control" } %>
              <% else %>
                <% if return_item.exchange_variant.present? %>
                  <%= return_item.exchange_variant.exchange_name %>
                <% end %>
              <% end%>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
  <%= f.field_container :amount, class: ['alert alert-info'] do %>
    <%= Spree.t(:total_pre_tax_refund) %>: <span id="total_pre_tax_refund"><%= @return_authorization.display_pre_tax_total.to_html %></span>
  <% end %>
  <% if !display_only %>
    <%= f.field_container :return_authorization, class: ['form-group return_pickup'] do %>
      <p>
        <%= f.check_box :request_pickup  %>
        <%= f.label :request_pickup, Spree.t(:request_pickup) %>
        <span class="h6">, en: "<%= @order.ship_address.return_pickup_address %>"</span>
      </p>
        <div class="row rma_shipping_label_contant <%= f.object.request_pickup ? '' : 'd-none' %>">
          <div class='form-group field col-6'>
            <%= f.label :range_time, Spree.t(:range_time) %>
            <%= f.select :range_time, Spree::ReturnAuthorization.range_times.keys.map{ |x| [x.titleize, x] }, {}, {class: 'select2 form-control', "data-placeholder" => Spree.t(:select_a_time_range)} %>
          </div>
          <div class='form-group field col-6'>
            <%= f.label :pickup_date, Spree.t(:pickup_date) %>
            <%= f.date_field :pickup_date, value: @return_authorization.pickup_date, min: Date.tomorrow, max: (@order.completed_at + 60.days), class: 'datepicker form-control' %>
            <%= f.error_message_on :pickup_date %>
          </div>
        </div>
    <% end %>
  <% elsif f.object.request_pickup %>
    <div class="text-secondary mt-2 mb-3">
      <h5><span class="font-weight-bold"> <%= Spree.t(:pickup_from) %> </span> : <%= @order.ship_address.return_pickup_address %></h5>
      <h5><span class="font-weight-bold"> <%= Spree.t(:pickup_date) %></span> : <%= @return_authorization.pickup_date %></h5>
    </div>
  <% end %>

  <%= f.field_container :reason, class: ['form-group'] do %>
    <%= f.label :reason, Spree.t(:reason) %>
    <%= f.select :return_authorization_reason_id, @return_authorization_reasons.collect{ |r|[r.name, r.id] }, { include_blank: true }, { class: 'form-control add-item', "data-placeholder" => Spree.t(:select_a_return_authorization_reason), disabled: display_only } %>
    <%= f.error_message_on :reason %>
  <% end %>

  <%= f.field_container :memo, class: ['form-group'] do %>
    <%= f.label :memo, Spree.t(:memo) %>
    <%= f.text_area :memo, class: 'form-control', disabled: display_only %>
    <%= f.error_message_on :memo %>
  <% end %>
</div>

<% if Spree::Config[:expedited_exchanges] %>
  <div class="expedited-exchanges-warning"><%= Spree.t(:expedited_exchanges_warning, days_window: Spree::Config[:expedited_exchanges_days_window]) %></div>
<% end %>
